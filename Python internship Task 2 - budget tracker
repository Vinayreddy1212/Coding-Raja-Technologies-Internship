import json
from collections import defaultdict

class BudgetTracker:
    def __init__(self):
        self.transactions = defaultdict(list)

    def add_transaction(self, category, amount, transaction_type):
        self.transactions[transaction_type].append({"category": category, "amount": amount})

    def calculate_budget(self):
        total_income = sum(transaction["amount"] for transaction in self.transactions["income"])
        total_expenses = sum(transaction["amount"] for transaction in self.transactions["expense"])
        remaining_budget = total_income - total_expenses
        return remaining_budget

    def analyze_expenses(self):
        expense_categories = defaultdict(int)
        for expense in self.transactions["expense"]:
            expense_categories[expense["category"]] += expense["amount"]
        return dict(expense_categories)

    def save_transactions(self, filename):
        with open(filename, "w") as file:
            json.dump(self.transactions, file)

    def load_transactions(self, filename):
        with open(filename, "r") as file:
            self.transactions = json.load(file)


def main():
    budget_tracker = BudgetTracker()

    while True:
        print("\nBudget Tracker Menu:")
        print("1. Add Expense")
        print("2. Add Income")
        print("3. Calculate Remaining Budget")
        print("4. Analyze Expenses")
        print("5. Save Transactions")
        print("6. Load Transactions")
        print("7. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            category = input("Enter expense category: ")
            amount = float(input("Enter expense amount: "))
            budget_tracker.add_transaction(category, amount, "expense")
            print("Expense added successfully.")

        elif choice == "2":
            category = input("Enter income category: ")
            amount = float(input("Enter income amount: "))
            budget_tracker.add_transaction(category, amount, "income")
            print("Income added successfully.")

        elif choice == "3":
            remaining_budget = budget_tracker.calculate_budget()
            print(f"Remaining Budget: {remaining_budget}")

        elif choice == "4":
            expense_analysis = budget_tracker.analyze_expenses()
            print("Expense Analysis:")
            for category, amount in expense_analysis.items():
                print(f"{category}: {amount}")

        elif choice == "5":
            filename = input("Enter filename to save transactions: ")
            budget_tracker.save_transactions(filename)
            print("Transactions saved successfully.")

        elif choice == "6":
            filename = input("Enter filename to load transactions: ")
            budget_tracker.load_transactions(filename)
            print("Transactions loaded successfully.")

        elif choice == "7":
            print("Exiting Budget Tracker. Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()
